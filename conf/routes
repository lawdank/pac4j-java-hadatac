# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                 controllers.Application.index(request: Request)
GET         /loginForm                        controllers.Application.loginForm()
GET         /facebook/index.html              controllers.Application.facebookIndex(request: Request)
GET         /hadatac/					      controllers.Portal.index()
POST        /hadatac/					      controllers.Portal.postIndex()
GET         /hadatac					      controllers.Portal.index()
POST        /hadatac					      controllers.Portal.postIndex()
GET         /hadatac/loginForm                controllers.Application.loginForm()
GET         /hadatac/form/index.html          controllers.Application.formIndex(request: Request)
GET         /hadatac/form/index.html.json     controllers.Application.formIndexJson(request: Request)
GET         /hadatac/signup                    controllers.Application.signUp(request: Request)
GET         /facebookadmin/index.html         controllers.Application.facebookAdminIndex(request: Request)
GET         /facebookcustom/index.html        controllers.Application.facebookCustomIndex(request: Request)
GET         /facebook/notprotected.html       controllers.Application.facebookNotProtectedIndex(request: Request)
GET         /twitter/index.html               controllers.Application.twitterIndex(request: Request)
GET         /form/index.html                  controllers.Application.formIndex(request: Request)
GET         /form/index.html.json             controllers.Application.formIndexJson(request: Request)
GET         /basicauth/index.html             controllers.Application.basicauthIndex(request: Request)
GET         /cas/index.html                   controllers.Application.casIndex(request: Request)
GET         /saml/index.html                  controllers.Application.samlIndex(request: Request)
GET         /oidc/index.html                  controllers.Application.oidcIndex(request: Request)
GET         /protected/index.html             controllers.Application.protectedIndex(request: Request)
GET         /jwt.html                         controllers.Application.jwt(request: Request)
GET         /dba/index.html                   controllers.Application.dbaIndex(request: Request)
POST        /dba/index.html                   controllers.Application.dbaIndex(request: Request)
GET         /rest-jwt/index.html              controllers.Application.restJwtIndex(request: Request)
GET         /csrf/index.html                  controllers.Application.csrfIndex(request: Request)
POST        /csrf/index.html                  controllers.Application.csrfIndex(request: Request)
GET         /forceLogin                       controllers.Application.forceLogin(request: Request)
GET         /callback                         @org.pac4j.play.CallbackController.callback(request: Request)
POST        /callback                         @org.pac4j.play.CallbackController.callback(request: Request)
GET         /casProxyCallback                 @org.pac4j.play.CallbackController.callback(request: Request)
POST        /casProxyCallback                 @org.pac4j.play.CallbackController.callback(request: Request)
GET         /logout                           @org.pac4j.play.LogoutController.logout(request: Request)
GET         /centralLogout                    controllers.CentralLogoutController.logout(request: Request)

GET     /hadatac/version                               controllers.Version.index()
POST    /hadatac/version                               controllers.Version.postIndex()

# metadata store management URLs
#GET     /hadatac/ts/clean                              controllers.triplestore.Clean.clean(oper: String)
#POST    /hadatac/ts/clean                              controllers.triplestore.Clean.postClean(oper: String)
#GET     /hadatac/ts/startstop                          controllers.triplestore.StartStop.index(oper: String, repository: String)
#POST    /hadatac/ts/startstop                          controllers.triplestore.StartStop.postIndex(oper: String, repository: String)
GET     /hadatac/ts/loadont                            controllers.triplestore.LoadOnt.loadOnt(oper: String)
POST    /hadatac/ts/loadont                            controllers.triplestore.LoadOnt.postLoadOnt(oper: String)
GET     /hadatac/ts/loadont/cache                      controllers.triplestore.LoadOnt.eraseCache()
#POST    /hadatac/ts/loadont/savenamespaces             controllers.triplestore.LoadOnt.saveNamespaces(request: Request)
#POST    /hadatac/ts/loadont/importnamespaces           controllers.triplestore.LoadOnt.importNamespaces(request: Request)
GET     /hadatac/ts/loadont/exportnamespaces           controllers.triplestore.LoadOnt.exportNamespaces()
#GET     /hadatac/ts/loadont/reloadgraphfromremote      controllers.triplestore.LoadOnt.reloadNamedGraphFromRemote(abbreviation: String)
#GET     /hadatac/ts/loadont/reloadgraphfromcache       controllers.triplestore.LoadOnt.reloadNamedGraphFromCache(abbreviation: String)
#GET     /hadatac/ts/loadont/deletegraph                controllers.triplestore.LoadOnt.deleteNamedGraph(abbreviation: String)
#GET     /hadatac/ts/loadont/deleteallgraphs            controllers.triplestore.LoadOnt.deleteAllNamedGraphs()
#GET     /hadatac/ts/loadkb                             controllers.triplestore.LoadKB.loadKB(oper: String)
#POST    /hadatac/ts/loadkb                             controllers.triplestore.LoadKB.postLoadKB(oper: String)
#POST    /hadatac/ts/loadkb/upload                      controllers.triplestore.LoadKB.uploadFile(oper: String,request: Request)
#POST    /hadatac/ts/loadkb/uploadturtle                controllers.triplestore.LoadKB.uploadTurtleFile(oper: String,request: Request)
GET     /hadatac/ts/exportkb                           controllers.triplestore.ExportKB.exportFile(oper: String)
POST    /hadatac/ts/exportkb                           controllers.triplestore.ExportKB.exportFile(oper: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                     controllers.Assets.at(path="/public", file)
#GET     /assets/*file                          controllers.Assets.versioned(path="/public", file: Asset)

# JavaScript Routing
#GET     /assets/javascript/routesMain.js       controllers.JS.jsRoutesMain()

